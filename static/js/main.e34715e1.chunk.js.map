{"version":3,"sources":["components/ContactForm/ContactForm.module.css","utils/transitions/pop.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","style","container","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","error","info","label","input","type","autoComplete","pattern","title","onChange","required","placeholder","btn","Filter","CSSTransition","in","length","timeout","classNames","popTransition","mountOnEnter","unmountOnExit","ContactList","visibleContacts","TransitionGroup","component","list","map","item","onClick","App","autoClose","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e34715e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1UEE9\",\"enterActive\":\"pop_enterActive__doTvn\",\"exit\":\"pop_exit__2kQB2\",\"exitActive\":\"pop_exitActive__1i14E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"info\":\"ContactList_info__DNDkd\",\"btn\":\"ContactList_btn__1Xk4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\nimport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACT } from './contacts-types';\n\nexport const addContact = createAction(ADD_CONTACT, (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\nexport const deleteContact = createAction(DELETE_CONTACT);\nexport const filterContact = createAction(FILTER_CONTACT);","export const ADD_CONTACT = 'contacts/add';\nexport const DELETE_CONTACT = 'contacts/delete';\nexport const FILTER_CONTACT = 'contacts/filter';","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={style.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport Cleave from 'cleave.js/react';\nimport { toast } from 'react-toastify';\nimport style from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('💩 Enter the correct number phone!');\n    } else {\n      dispatch(addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\"\n          onChange={handleChange}\n          required\n          placeholder=\"Enter name (Ivanov Ivan)\"\n        />\n      </label>\n      <label className={style.label}>\n        Phone Number\n        <Cleave\n          className={style.input}\n          type=\"tel\"\n          autoComplete=\"off\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          onChange={handleChange}\n          required\n          placeholder=\"Enter numbe (111-11-11)\"\n        />\n      </label>\n      <button className={style.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getFilter,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { CSSTransition } from 'react-transition-group';\nimport popTransition from '../../utils/transitions/pop.module.css';\nimport style from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <CSSTransition\n      in={contacts.length > 0}\n      timeout={250}\n      classNames={popTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n      <label className={style.label}>\n        Find contacts by name\n        <input\n          className={style.input}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(filterContact(e.target.value))}\n        />\n      </label>\n    </CSSTransition>\n  );\n}\n\nexport default Filter;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport {\n  getVisibleContacts,\n  getContacts,\n} from '../../redux/contacts/contacts-selectors';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n// import { ReactComponent as DeleteIcon } from '../../img/delete.svg';\nimport style from './ContactList.module.css';\nimport popTransition from '../../utils/transitions/pop.module.css';\n\nfunction ContactList() {\n    const dispatch = useDispatch();\n    const visibleContacts = useSelector(getVisibleContacts);\n    const contacts = useSelector(getContacts);\n\n  return (\n    <>\n    <CSSTransition\n      in={!contacts.length}\n      timeout={250}\n      classNames={popTransition}\n      mountOnEnter\n      unmountOnExit\n    >\n     <p>Your phonebook is empty. Please add contact.</p>\n      </CSSTransition>\n\n      <TransitionGroup component=\"ul\" className={style.list}>\n        {visibleContacts.map(({ id, name, number }) => (\n          <CSSTransition\n            key={id}\n            timeout={250}\n            mountOnEnter\n            unmountOnExit\n            classNames={popTransition}\n          >\n        <li className={style.item}>\n           <p className={style.info}>\n            <b>{name}</b>\n            <em>{number}</em>\n          </p>\n          <button\n            className={style.btn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            {/* <DeleteIcon width=\"26\" height=\"26\" /> */}\n          </button>\n        </li>\n        </CSSTransition>\n      ))}\n      </TransitionGroup>\n      </>\n  );\n}\n\n\nexport default ContactList;\n","\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3700} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}